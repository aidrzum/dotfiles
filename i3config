#My own Configuration by Aidr
#
set $mod Mod4
set $mod2 Mod1
font pango:Ubuntu Regular 8
exec --no-startup-id dex --autostart --environment i3
exec --no-startup-id xss-lock --transfer-sleep-lock -- /home/rdia/.config/scripts/lock
exec --no-startup-id /home/rdia/Documents/scripz/hdmi2.sh
exec --no-startup-id lxpolkit
exec --no-startup-id nm-applet
exec --no-startup-id mpd
exec --no-startup-id volumeicon
exec --no-startup-id xfce4-clipman
exec --no-startup-id xfce4-power-manager
exec --no-startup-id picom
exec --no-startup-id sleep 4s && terminator
exec --no-startup-id sleep 4s && conky -c /home/rdia/.config/conky/awesomeconky.conf
exec --no-startup-id sleep 2s && conky -c /home/rdia/.config/conky/i3_conky/i3_conkyrc
exec --no-startup-id sleep 2s && nitrogen --restore
exec --no-startup-id xset r rate 500 50
exec --no-startup-id fusuma
#exec --no-startup-id sh sleep 30s && /home/rdia/Documents/scripz/xinp.sh
#exec --no-startup-id /home/rdia/.fehbg

# My custom bindings
bindsym $mod+Shift+Return exec pcmanfm
bindsym $mod+$mod2+Return exec kitty
bindsym $mod+Shift+q exec uxterm -e ncmpcpp
bindsym $mod2+Shift+v exec xfce4-popup-clipman
bindsym $mod2+r exec --no-startup-id rofi  -drun-match-fields name -show drun -show-icons
bindsym $mod+comma workspace prev
bindsym $mod+period workspace next
bindsym $mod2+Shift+Return exec mpc play
bindsym $mod2+Shift+Up exec mpc pause
bindsym $mod2+Shift+Down exec mpc stop
bindsym $mod2+Shift+Left exec mpc prev
bindsym $mod2+Shift+Right exec mpc next
bindsym $mod+x exec /home/rdia/.config/scripts/lock
bindsym $mod+b exec brave-browser
bindsym $mod+Ctrl+v exec vlc
bindsym $mod+control+Return exec /home/rdia/Documents/scripz/nauti.sh
bindsym $mod+control+1 exec /home/rdia/Documents/scripz/laptop_audio.sh
bindsym $mod+control+2 exec /home/rdia/Documents/scripz/hdmi_audio.sh
bindsym $mod+control+3 exec /home/rdia/Documents/scripz/audiofix.sh
bindsym $mod+control+4 exec /home/rdia/Documents/scripz/xinp.sh

#My custom sratchpad bindings:
for_window [instance="scratchpad"] move window to scratchpad, scratchpad show

bindsym $mod+Shift+BackSpace move scratchpad
bindsym $mod+backslash scratchpad show

#bindsym $mod2+BackSpace exec --no-startup-id kitty -name scratchpad -e ranger

#bindsym $mod+Shift+m [class="fm"] scratchpad show; move position center

#exec --no-startup-id kitty --class "fm,fm" -e ranger



## My Screenshots shortcuts
#bindsym Ctrl+Shift+Print exec --no-startup-id scr
#bindsym Print exec --no-startup-id /usr/local/bin/scr ~/Pictures/scrot/$(date "+%F").png
#bindsym $mod+Print exec --no-startup-id flameshot gui && killall flameshot
bindsym $mod+Shift+Print exec --no-startup-id scrot ~/Pictures/scrot/scrot~$(date "+%F").png
#bindsym control+Print exec --no-startup-id flameshot gui -p ~/Directory/
#bindsym $mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) "~/rdia/Pictures/Screenshots/$(date)"

## Clipboard Screenshots
#bindsym Ctrl+Print exec --no-startup-id maim | xclip -selection clipboard -t image/png
#bindsym Ctrl+$mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) | xclip -selection clipboard -t image/png
#bindsym Ctrl+Shift+Print exec --no-startup-id maim --select | xclip -selection clipboard -t image/png
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status
floating_modifier $mod
tiling_drag modifier titlebar
bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+q kill
bindsym $mod+d exec --no-startup-id dmenu_run
bindsym $mod+p exec --no-startup-id rofi  -drun-match-fields name -show drun -show-icons
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right
# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right
# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right
# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
# split in horizontal orientation
bindsym $mod+h split h
# split in vertical orientation
bindsym $mod+v split v
# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle
# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split
# toggle tiling / floating
bindsym $mod+Shift+space floating toggle
# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle
# focus the parent container
bindsym $mod+a focus parent
set $ws1 "1:   Term"
set $ws2 "2:   Fire"
set $ws3 "3:   Data"
set $ws4 "4:   Tunes"
set $ws5 "5:   Code"
set $ws6 "7:   EditBoard"
set $ws7 "6    Shutter"
set $ws8 "8:   Vrtl"
set $ws9 "9:   Studio"
set $ws10 "10:   Chromium"
# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10
#Allocate applications to workspaces (Custom Mods)
#for_window [class="class_name"] move to workspace $[workspace_variable]
for_window [class="Terminator"] move to workspace $ws1
#for_window [class="kitty"] move to workspace $ws1
for_window [class="firefox"] move to workspace $ws2
for_window [class="Brave-browser"] move to workspace $ws2
for_window [class="Nautilus"] move to workspace $ws3
for_window [class="vlc"] move to workspace $ws4
for_window [class="Virt-manager"] move to workspace $ws8
for_window [class="virt-manager"] move to workspace $ws8
#for_window [class="pcmanfm"] move to workspace $ws3
#Allocate the floating windows as well (Custom Mods)
for_window [class="Nautilus" instance="file_progress"] floating enable
for_window [class="Thunar" instance="file_progress"] floating enable
for_window [class="pcmanfm" instance="file_progress"] floating enable
for_window [class="Pcmanfm" instance="file_progress"] floating enable
#Some windows should just float ;)
for_window [window_role="About"] floating enable
for_window [class="eog,Eog"] floating enable, move position center
for_window [class="vlc"] floating enable, move position center
for_window [title="Authy"] floating enable
for_window [class="XTerm"] floating enable, move position center
for_window [class="UXTerm"] floating enable
for_window [class="blueman-manager"] floating enable, move position center
for_window [class="Blue-manager"] floating enable
for_window [class="Virt-Manager,virt-manager"] floating enable, move position center
for_window [class="Org.gnome.NautilusPreviewer"] floating enable, move position top
for_window [class="Org.gnome.NautilusPreviewer"] floating enable, move position top
for_window [class="org.gnome.NautilusPreviewer"] floating enable, move position top
for_window [class="gnome-sushi,Gnome-sushi,Gnome-Sushi"] floating enable, move position top

for_window [class="WayVNC,TigerVnc"] floating enable
for_window [class="kitty"] floating enable, move position center
for_window [class="blueman-manager"] floating enable, move position center
for_window [class="Blueman-manager"] floating enable, move position center
for_window [class="zoom"] floating enable, move position center, resize set 1280x768





# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
#bindsym $mod+Shift+e exec exit
#bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
bindsym $mod+Ctrl+Shift+e exec i3-msg exit
# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status -c /home/rdia/.config/i3status/i3status.conf
        i3bar_command i3bar --transparency
        colors {
                background $bar-color
                separator #191919
                #                       border          background      text
                focused_workspace       $focused-ws     $focused-ws     $text
                inactive_workspace      $in-bgcolor     $in-bgcolor     $text
                urgent_workspace        $u-bgcolor      $u-bgcolor      $text   

        }
}
# Color shemes for windows 
set $bgcolor    #41184599
set $in-bgcolor #3636364d
set $text       #ffffff
set $u-bgcolor  #ff0000
set $indicator  #a8a3c1
set $in-text    #969696
set $focused-ws #41184580
set $bar-color  #4118450D
#                       border          background      text            indicator (a line which shows where the next window will be placed)     
client.focused          $bgcolor        $bgcolor        $text           $indicator
client.unfocused        $in-bgcolor     $in-bgcolor     $in-text        $in-bgcolor
client.focused_inactive $in-bgcolor     $in-bgcolor     $in-text        $in-bgcolor
client.urgent           $u-bgcolor      $u-bgcolor      $text           $u-bgcolor
###############################################################
###############################################################
# default gaps
gaps inner 10
gaps outer 5
# gaps
set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
# Key bindings for Media control keys
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
